node('maven'){
stage('maven define')
{
  // use the id of the globally configured maben instance
  
  def mvnTool = tool 'Apache Maven 3.6.2'
  
  //execute maven
  sh "${mvnTool}/bin/mvn clean package"
  junit allowEmptyResults: true, testResults: 'target/surefire-reports.*.xml'
  sh "echo hello world"
 } 
 
 stage('artifacts') 
 {
  archiveArtifacts '**/target/*.war'
  }
  
  stage ('docker build')
  {
    sh " docker build -t bikashlama541/archiveartifacts ."
    sh "docker run -d bikashlama541/archiveartifacts"
    sh "docker push bikashlama541/archiveartifacts"
  } 
  
  stage('send artifacts to s3'){
  withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-credentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                sh "aws s3 cp /home/ec2-user/workspace/pipeline-project/addressbook_main/target/addressbook.war  s3://jenkins-bucket541/"
}
}
  stage('deployment')
  {
    sshagent(['ec2-user'])
     {
      sh "ssh -o StrictHostKeyChecking=no ec2-user@54.91.97.11 /home/ec2-user/tomcat9/bin/startup.sh"
     //sh "scp -o StrictHostKeyChecking=no /home/ec2-user/workspace/pipeline-project/addressbook_main/target/addressbook.war ec2-user@54.91.97.11 /home/ec2-user/tomcat9/webapps"
      }
    }  
  
  stage('3rd stage')
  {
  echo"echo sample in feature branch"
  }
 } 
